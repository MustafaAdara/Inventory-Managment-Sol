<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompareAttribute_MustMatch" xml:space="preserve">
    <value>قيمة "{0}" و "{1}" غير متماثلتان</value>
  </data>
  <data name="EmailAddressAttribute_Invalid" xml:space="preserve">
    <value>قيمة "{0}" ليست عنوان بريد الكترونى صحيح</value>
  </data>
  <data name="FieldMustBeDate" xml:space="preserve">
    <value>قيمة "{0}" يجب ان تكون تاريخ.</value>
  </data>
  <data name="FieldMustBeNumeric" xml:space="preserve">
    <value>قيمة "{0}" يجب ان تكون رقم.</value>
  </data>
  <data name="InvalidPropertyValue" xml:space="preserve">
    <value>قيمة '{0}' غير صحيحة.</value>
  </data>
  <data name="Login_Invalid" xml:space="preserve">
    <value>اسم المستخدم أو كلمة السر غير صحيحة</value>
  </data>
  <data name="Login_MailNotConfimed" xml:space="preserve">
    <value>لم يتم تأكيد بريدك الألكترونى رجاءً راجع بريدك او &lt;a href="{0}"&gt;أعد ارسال بريد التاكيد&lt;/a&gt;</value>
  </data>
  <data name="MinLengthAttribute_ValidationError" xml:space="preserve">
    <value>قيمة "{0}" لابد ان تكون على الأقل "{1}" حروف</value>
  </data>
  <data name="ModelBinding_AttemptedValueIsInvalid" xml:space="preserve">
    <value>'{0}' is an invalid value in the {1}.</value>
    <comment>The value '{0}' is not valid for {1}.</comment>
  </data>
  <data name="ModelBinding_MissingBindRequiredValue" xml:space="preserve">
    <value>The value for the {0} is not specified.</value>
    <comment>A value for the '{0}' parameter or property was not provided.</comment>
  </data>
  <data name="ModelBinding_MissingKeyOrValue" xml:space="preserve">
    <value>Required.</value>
    <comment>A value is required.</comment>
  </data>
  <data name="ModelBinding_MissingRequestBodyRequiredValue" xml:space="preserve">
    <value>The request must have a body.</value>
    <comment>A non-empty request body is required.</comment>
  </data>
  <data name="ModelBinding_NonPropertyAttemptedValueIsInvalid" xml:space="preserve">
    <value>'{0}' is not valid.</value>
    <comment>The value '{0}' is not valid.</comment>
  </data>
  <data name="ModelBinding_NonPropertyUnknownValueIsInvalid" xml:space="preserve">
    <value>The value is not valid.</value>
    <comment>The supplied value is invalid.</comment>
  </data>
  <data name="ModelBinding_NonPropertyValueMustBeANumber" xml:space="preserve">
    <value>قيمة لابد ان تكون رقمى</value>
    <comment>The field must be a number.</comment>
  </data>
  <data name="ModelBinding_UnknownValueIsInvalid" xml:space="preserve">
    <value>The value of the {0} is not valid.</value>
    <comment>The supplied value is invalid for {0}.</comment>
  </data>
  <data name="ModelBinding_ValueIsInvalid" xml:space="preserve">
    <value>'{0}' is not valid.</value>
    <comment>The value '{0}' is invalid.</comment>
  </data>
  <data name="ModelBinding_ValueMustBeANumber" xml:space="preserve">
    <value>قيمة {0} لابد ان تكون رقمى</value>
    <comment>The field {0} must be a number.</comment>
  </data>
  <data name="ModelBinding_ValueMustNotBeNull" xml:space="preserve">
    <value>Required input.</value>
    <comment>The value '{0}' is invalid.</comment>
  </data>
  <data name="PasswordValidator_PasswordRequireDigit" xml:space="preserve">
    <value>كلمة السر يجب ان تحتوى رقم</value>
  </data>
  <data name="PasswordValidator_PasswordRequireLower" xml:space="preserve">
    <value>كلمة السر يجب ان تحتوى حرف صغير</value>
  </data>
  <data name="PasswordValidator_PasswordRequireNonLetterOrDigit" xml:space="preserve">
    <value>كلمة السر يجب ان تحتوى حرف مميز غير الحروف و الأرقام</value>
  </data>
  <data name="PasswordValidator_PasswordRequireUpper" xml:space="preserve">
    <value>كلمة السر يجب ان تحتوى حرف كبير</value>
  </data>
  <data name="PasswordValidator_PasswordTooShort" xml:space="preserve">
    <value>كلمة السر اقل من المسموح</value>
  </data>
  <data name="PhoneAttribute_Invalid" xml:space="preserve">
    <value>قمية "{0}" ليست رقم هاتف صحيح</value>
  </data>
  <data name="PropertyValueInvalid" xml:space="preserve">
    <value>القيمة '{0}' غير ملائمة لـ  "{1}".</value>
  </data>
  <data name="RegexAttribute_ValidationError" xml:space="preserve">
    <value>قيمة "{0}" غير مطابقة للشكل الصحيح '{1}'</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>قيمة "{0}" الزامية.</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>قيمة "{0}" لابد ان تكون على الأكتر "{1}" حروف</value>
  </data>
  <data name="StringLengthAttribute_ValidationErrorIncludingMinimum" xml:space="preserve">
    <value>قيمة "{0}" لابد ان تكون على الأقل "{2}" حروف و على الأكثر "{1}" حروف</value>
  </data>
  <data name="ValidateEmail_DuplicateEmail" xml:space="preserve">
    <value>البريد الالكترونى سبق ادخاله من قبل</value>
  </data>
  <data name="ValidateEmail_InvalidEmail" xml:space="preserve">
    <value>البريد الالكترونى غير صحيح</value>
  </data>
  <data name="ValidateEmail_PropertyTooShort" xml:space="preserve">
    <value>البريد الالكترونى اقل من المسموح</value>
  </data>
  <data name="ValidateUserName_DuplicateName" xml:space="preserve">
    <value>اسم الدخول موجود من قبل</value>
  </data>
  <data name="ValidateUserName_InvalidUserName" xml:space="preserve">
    <value>اسم الدخول غير صحيح</value>
  </data>
  <data name="ValidateUserName_PropertyTooShort" xml:space="preserve">
    <value>اسم الدخول اقل من المسموح</value>
  </data>
  <data name="Validator_CompareAttribute" xml:space="preserve">
    <value>قيمة {0} و {1} غير منطبقين</value>
    <comment>'{0}' and '{1}' do not match.</comment>
  </data>
  <data name="Validator_CreditCardAttribute" xml:space="preserve">
    <value>قيمة {0} غير مطابقة لبطاقة الآئتمان</value>
    <comment>The {0} field is not a valid credit card number.</comment>
  </data>
  <data name="Validator_DataTypeAttribute_Currency" xml:space="preserve">
    <value>ادخل قيمة صحيحة</value>
    <comment>Please enter a valid date.</comment>
  </data>
  <data name="Validator_DataTypeAttribute_Date" xml:space="preserve">
    <value>ادخل تاريخ صحيح</value>
    <comment>Please enter a valid date.</comment>
  </data>
  <data name="Validator_EmailAddressAttribute" xml:space="preserve">
    <value>قيمة {0} غير مطابقة لبريد الكترونى</value>
  </data>
  <data name="Validator_FileExtensionsAttribute" xml:space="preserve">
    <value>قيمة {0} تقبل فقط الأمتدادات : : {1}</value>
    <comment>The {0} field only accepts files with the following extensions: {1}</comment>
  </data>
  <data name="Validator_MaxLengthAttribute" xml:space="preserve">
    <value>قيمة {0} لابد ان يكون الحد الأقصى '{1}'.</value>
    <comment>The field {0} must be a string or array type with a maximum length of '{1}'.</comment>
  </data>
  <data name="Validator_MinLengthAttribute" xml:space="preserve">
    <value>قيمة {0} لابد ان يكون الحد الأدنى'{1}'.</value>
    <comment>The field {0} must be a string or array type with a minimum length of '{1}'.</comment>
  </data>
  <data name="Validator_PhoneAttribute" xml:space="preserve">
    <value>قيمة {0} غير مطابقة لرقم هاتف.</value>
    <comment>The {0} field is not a valid phone number.</comment>
  </data>
  <data name="Validator_RangeAttribute" xml:space="preserve">
    <value>قيمة {0} لابد تتراوح من {1} الى {2}.</value>
    <comment>The field {0} must be between {1} and {2}.</comment>
  </data>
  <data name="Validator_RegularExpressionAttribute" xml:space="preserve">
    <value>قيمة {0} لابد ان تطابق نمط '{1}'.</value>
    <comment>The field {0} must match the regular expression '{1}'.</comment>
  </data>
  <data name="Validator_RequiredAttribute" xml:space="preserve">
    <value>قيمة "{0}" الزامية.</value>
    <comment>The {0} field is required.</comment>
  </data>
  <data name="Validator_StringLengthAttribute" xml:space="preserve">
    <value>قيمة "{0}" لابد ان تكون على الأكتر "{1}" حروف</value>
    <comment>The field {0} must be a string with a maximum length of {1}.</comment>
  </data>
  <data name="Validator_StringLengthAttributeWithMin" xml:space="preserve">
    <value>طول قيمة {0} بحد ادنى {2} و بحد ادقصى {1}.</value>
    <comment>The field {0} must be a string with a maximum length of {1} and a minimum length of {2}.</comment>
  </data>
  <data name="Validator_UrlAttribute" xml:space="preserve">
    <value>قيمة {0} غير منطبقة لعنوان ويب.</value>
    <comment>The {0} field is not a valid fully-qualified http, https, or ftp URL.</comment>
  </data>
  <data name="Validator_ValueMustBeANumber" xml:space="preserve">
    <value>قيمة {0} لابد ان تطابق نمط رقمى</value>
  </data>
</root>